-- DELETE
DROP TABLE if exists weapon CASCADE;
-- WEAPON TABLE
CREATE TABLE weapon(
	id serial PRIMARY KEY,
	name varchar(255) NOT NULL,
	price int NOT NULL,
	damage int NOT NULL,
	defense int NOT NULL
	
);
--ALTER TABLE weapon ADD COLUMN id_weapon serial PRIMARY KEY;

-- INSERT INFO IN TABLE
INSERT INTO weapon (name, price, damage, defense) VALUES ('mace', 10, 10,  20);
INSERT INTO weapon (name, price, damage, defense) VALUES ('rapier', 35, 10, 27);
INSERT INTO weapon (name, price, damage, defense) VALUES ('scimitar', 42, 10, 36);
INSERT INTO weapon (name, price, damage, defense) VALUES ('maul', 47, 10, 43);
INSERT INTO weapon (name, price, damage, defense) VALUES ('longsword', 50, 10, 47);

-- SHOW
SELECT name, damage, defense, price FROM weapon;

-- MATERIAL TABLE
DROP TABLE if exists material CASCADE;

CREATE TABLE material(
	id serial PRIMARY KEY,
	name varchar(255) NOT NULL,
	--bonus_magic int NOT NULL,
	--bonus_defense int NOT NULL,
	price int NOT NULL,
	damage int NOT NULL, 
	defense int NOT NULL
	
);
--ALTER TABLE material ADD COLUMN id_material serial PRIMARY KEY; 

INSERT INTO material (name, price, damage, defense) VALUES ('bronze', 0, 1, 1);
INSERT INTO material (name, price, damage, defense) VALUES ('steel', 20, 2, 2);
INSERT INTO material (name, price, damage, defense) VALUES ('white', 100, 3, 3);
INSERT INTO material (name, price, damage, defense) VALUES ('mythrill', 500, 4, 4);
INSERT INTO material (name, price, damage, defense) VALUES ('adamant', 1250, 5, 5);
INSERT INTO material (name, price, damage, defense) VALUES ('rune', 3000, 6, 6);
INSERT INTO material (name, price, damage, defense) VALUES ('draconic', 10000, 7, 7);

SELECT name, price, damage, defense FROM material;

-- ASSO 
DROP TABLE if exists weapon_material;
CREATE TABLE weapon_material(
	id_weapon int NOT NULL  REFERENCES weapon(id),
	id_material int NOT NULL  REFERENCES material(id)
);

ALTER TABLE public.weapon_material
    ADD CONSTRAINT pk PRIMARY KEY (id_weapon, id_material)
;

INSERT INTO weapon_material (id_weapon, id_material) VALUES (1, 1);
INSERT INTO weapon_material (id_weapon, id_material) VALUES (1, 2);
INSERT INTO weapon_material (id_weapon, id_material) VALUES (1, 3);
INSERT INTO weapon_material (id_weapon, id_material) VALUES (2, 1);
INSERT INTO weapon_material (id_weapon, id_material) VALUES (3, 1);
INSERT INTO weapon_material (id_weapon, id_material) VALUES (4, 1);
INSERT INTO weapon_material (id_weapon, id_material) VALUES (5, 1);
INSERT INTO weapon_material (id_weapon, id_material) VALUES (5, 2);
INSERT INTO weapon_material (id_weapon, id_material) VALUES (5, 4);
INSERT INTO weapon_material (id_weapon, id_material) VALUES (3, 2);

SELECT * FROM weapon
LEFT JOIN weapon_material ON weapon.id= weapon_material.id_weapon
LEFT JOIN material ON material.id = weapon_material.id_material


--Monster Stat
DROP TABLE if exist monster_stats;
CREATE TABLE monster_stats(
	id serial PRIMARY KEY,
	name var(255) NOT NULL,
	xp int NOT NULL,
	hitpoint int NOT NULL,
	strength int NOT NULL,
	dexterity int NOT NULL,
	constitution int NOT NULL,
	intelligence int NOT NULL,
	wisdom int NOT NULL,
	charisma int NOT NULL,
	armorclass int NOT NULL,
	attackbonus int NOT NULL,
	damagebonus int NOT NULL,
	damagedie int NOT NULL,
	speed int NOT NULL
);

--ALTER TABLE monster_stats ADD COLUMN id_monster serial PRIMARY KEY;

INSERT INTO monster_stats (name, xp, hitpoint, strength, dexterity, constitution, intelligence, wisdom, charisma, armorclass, attackbonus, damagebonus, damagedie, speed) VALUES ('Goblin', 135, 6, 13, 15, 12, 10, 9, 6, 16, 1, 0, 4, 3000)